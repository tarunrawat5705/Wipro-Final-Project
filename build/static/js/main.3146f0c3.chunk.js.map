{"version":3,"sources":["context/UserContext.js","components/Scrum Details/ScrumDetails.js","components/Dashboard/Dashboard.js","components/Login/Login.js","components/UserProfile/UserProfile.js","components/Signup/SignUp.js","App.js","index.js"],"names":["UserContext","createContext","UserProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","user","setUser","useEffect","loggedInUser","JSON","parse","localStorage","getItem","_jsx","Provider","value","login","userData","setItem","stringify","logout","removeItem","ScrumDetails","scrum","tasks","setTasks","_useState3","_useState4","users","setUsers","useContext","history","useHistory","push","fetchTasks","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","get","concat","id","sent","data","t0","console","error","stop","apply","arguments","fetchUsers","_ref3","_callee2","scrumUsers","_context2","filter","some","task","assignedTo","length","handleStatusChange","_ref4","_callee3","taskId","newStatus","_context3","patch","status","_toConsumableArray","find","date","Date","toISOString","split","prevTasks","map","_objectSpread","_x","_x2","_jsxs","name","title","description","role","onChange","e","target","email","Dashboard","scrums","setScrums","selectedScrum","setSelectedScrum","_useState5","_useState6","showForm","setShowForm","_useState7","_useState8","_useState9","_useState10","newScrumName","setNewScrumName","_useState11","_useState12","newTaskTitle","setNewTaskTitle","_useState13","_useState14","newTaskDescription","setNewTaskDescription","_useState15","_useState16","newTaskStatus","setNewTaskStatus","_useState17","_useState18","newTaskAssignedTo","setNewTaskAssignedTo","fetchScrums","handleGetDetails","scrumId","handleAddScrum","_callee4","event","newScrumResponse","newScrum","updatedScrums","_context4","preventDefault","post","onClick","onSubmit","type","required","Login","setEmail","password","setPassword","handleLogin","alert","UserProfile","selectedUser","setSelectedUser","newUserName","setNewUserName","newUserEmail","setNewUserEmail","newUserPassword","setNewUserPassword","newUserRole","setNewUserRole","userId","handleAddUser","updatedUsers","SignUp","setName","handleSignUp","Nav","_useContext","Link","to","_Fragment","App","Router","className","Switch","Route","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3146f0c3.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const loggedInUser = JSON.parse(localStorage.getItem('user'));\r\n        if (loggedInUser) {\r\n            setUser(loggedInUser);\r\n        }\r\n    }, []);\r\n\r\n    const login = (userData) => {\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n        setUser(userData);\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('user');\r\n        setUser(null);\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user, login, logout }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\nexport { UserProvider, UserContext };\r\n","// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { useHistory } from 'react-router-dom';\r\n\r\n// const ScrumDetails = ({ scrum }) => {\r\n//     const [tasks, setTasks] = useState([]);\r\n//     const [users, setUsers] = useState([]);\r\n//     const history = useHistory();\r\n\r\n//     useEffect(() => {\r\n//         const checkUser = () => {\r\n//             const loggedInUser = JSON.parse(localStorage.getItem('user'));\r\n//             if (!loggedInUser) {\r\n//                 history.push('/login');\r\n//             }\r\n//         };\r\n\r\n//         checkUser();\r\n//     }, [history]);\r\n\r\n//     useEffect(() => {\r\n//         const fetchTasks = async () => {\r\n//             try {\r\n//                 const response = await axios.get(`http://localhost:4000/tasks?scrumId=${scrum.id}`);\r\n//                 setTasks(response.data);\r\n//             } catch (error) {\r\n//                 console.error('Error fetching tasks:', error);\r\n//             }\r\n//         };\r\n\r\n//         fetchTasks();\r\n//     }, [scrum.id]);\r\n\r\n//     useEffect(() => {\r\n//         const fetchUsers = async () => {\r\n//             try {\r\n//                 const response = await axios.get('http://localhost:4000/users');\r\n//                 const scrumUsers = response.data.filter(user => tasks.some(task => task.assignedTo === user.id));\r\n//                 setUsers(scrumUsers);\r\n//             } catch (error) {\r\n//                 console.error('Error fetching users:', error);\r\n//             }\r\n//         };\r\n\r\n//         if (tasks.length > 0) {\r\n//             fetchUsers();\r\n//         }\r\n//     }, [tasks]);\r\n\r\n//     return (\r\n//         <div>\r\n//             <h3>Scrum Details for {scrum.name}</h3>\r\n//             <h4>Tasks</h4>\r\n//             <ul>\r\n//                 {tasks.map(task => (\r\n//                     <li key={task.id}>\r\n//                         <strong>{task.title}:</strong> {task.description} - <em>{task.status}</em>\r\n//                     </li>\r\n//                 ))}\r\n//             </ul>\r\n//             <h4>Users</h4>\r\n//             <ul>\r\n//                 {users.map(user => (\r\n//                     <li key={user.id}>\r\n//                         {user.name} ({user.email})\r\n//                     </li>\r\n//                 ))}\r\n//             </ul>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ScrumDetails;\r\n\r\n\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ScrumDetails = ({ scrum }) => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const { user } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const checkUser = () => {\r\n            const loggedInUser = JSON.parse(localStorage.getItem('user'));\r\n            if (!loggedInUser) {\r\n                history.push('/login');\r\n            }\r\n        };\r\n\r\n        checkUser();\r\n    }, [history]);\r\n\r\n    useEffect(() => {\r\n        const fetchTasks = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:4000/tasks?scrumId=${scrum.id}`);\r\n                setTasks(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching tasks:', error);\r\n            }\r\n        };\r\n\r\n        fetchTasks();\r\n    }, [scrum.id]);\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:4000/users');\r\n                const scrumUsers = response.data.filter(user => tasks.some(task => task.assignedTo === user.id));\r\n                setUsers(scrumUsers);\r\n            } catch (error) {\r\n                console.error('Error fetching users:', error);\r\n            }\r\n        };\r\n\r\n        if (tasks.length > 0) {\r\n            fetchUsers();\r\n        }\r\n    }, [tasks]);\r\n\r\n    const handleStatusChange = async (taskId, newStatus) => {\r\n        try {\r\n            await axios.patch(`http://localhost:4000/tasks/${taskId}`, {\r\n                status: newStatus,\r\n                history: [\r\n                    ...tasks.find(task => task.id === taskId).history,\r\n                    {\r\n                        status: newStatus,\r\n                        date: new Date().toISOString().split('T')[0], // Set the current date\r\n                    },\r\n                ],\r\n            });\r\n\r\n            // Update the tasks state with the new status\r\n            setTasks(prevTasks =>\r\n                prevTasks.map(task =>\r\n                    task.id === taskId ? { ...task, status: newStatus } : task\r\n                )\r\n            );\r\n        } catch (error) {\r\n            console.error('Error updating task status:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>Scrum Details for {scrum.name}</h3>\r\n            <h4>Tasks</h4>\r\n            <ul>\r\n                {tasks.map(task => (\r\n                    <li key={task.id}>\r\n                        <strong>{task.title}:</strong> {task.description} - <em>{task.status}</em>\r\n                        {user?.role === 'admin' && (\r\n                            <select\r\n                                value={task.status}\r\n                                onChange={(e) => handleStatusChange(task.id, e.target.value)}\r\n                            >\r\n                                <option value=\"To Do\">To Do</option>\r\n                                <option value=\"In Progress\">In Progress</option>\r\n                                <option value=\"Done\">Done</option>\r\n                            </select>\r\n                        )}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <h4>Users</h4>\r\n            <ul>\r\n                {users.map(user => (\r\n                    <li key={user.id}>\r\n                        {user.name} ({user.email})\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScrumDetails;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport ScrumDetails from '../Scrum Details/ScrumDetails';\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\nconst Dashboard = () => {\r\n    const [scrums, setScrums] = useState([]);\r\n    const [selectedScrum, setSelectedScrum] = useState(null);\r\n    const [showForm, setShowForm] = useState(false);\r\n    const [users, setUsers] = useState([]);\r\n    const [newScrumName, setNewScrumName] = useState('');\r\n    const [newTaskTitle, setNewTaskTitle] = useState('');\r\n    const [newTaskDescription, setNewTaskDescription] = useState('');\r\n    const [newTaskStatus, setNewTaskStatus] = useState('To Do');\r\n    const [newTaskAssignedTo, setNewTaskAssignedTo] = useState('');\r\n    const { user } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        const fetchScrums = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:4000/scrums');\r\n                setScrums(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching scrums:', error);\r\n            }\r\n        };\r\n\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:4000/users');\r\n                setUsers(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching users:', error);\r\n            }\r\n        };\r\n\r\n        fetchScrums();\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    const handleGetDetails = async (scrumId) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:4000/scrums/${scrumId}`);\r\n            setSelectedScrum(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching scrum details:', error);\r\n        }\r\n    };\r\n\r\n    const handleAddScrum = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            // Add new Scrum\r\n            const newScrumResponse = await axios.post('http://localhost:4000/scrums', {\r\n                name: newScrumName,\r\n            });\r\n\r\n            const newScrum = newScrumResponse.data;\r\n\r\n            // Add new Task\r\n            const newTaskResponse = await axios.post('http://localhost:4000/tasks', {\r\n                title: newTaskTitle,\r\n                description: newTaskDescription,\r\n                status: newTaskStatus,\r\n                scrumId: newScrum.id,\r\n                assignedTo: newTaskAssignedTo,\r\n                history: [\r\n                    {\r\n                        status: newTaskStatus,\r\n                        date: new Date().toISOString().split('T')[0], // Set the current date\r\n                    },\r\n                ],\r\n            });\r\n\r\n            const updatedScrums = await axios.get('http://localhost:4000/scrums');\r\n            setScrums(updatedScrums.data);\r\n            setShowForm(false); // Hide the form after submission\r\n            setNewScrumName('');\r\n            setNewTaskTitle('');\r\n            setNewTaskDescription('');\r\n            setNewTaskStatus('To Do');\r\n            setNewTaskAssignedTo('');\r\n        } catch (error) {\r\n            console.error('Error adding scrum:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Scrum Teams</h2>\r\n            {user?.role === 'admin' && <div>\r\n                <button onClick={() => setShowForm(!showForm)}>\r\n                    {showForm ? 'Cancel' : 'Add New Scrum'}\r\n                </button>\r\n                {showForm && (\r\n                    <form onSubmit={handleAddScrum}>\r\n                        <div>\r\n                            <label>Scrum Name:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={newScrumName}\r\n                                onChange={(e) => setNewScrumName(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label>Task Title:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={newTaskTitle}\r\n                                onChange={(e) => setNewTaskTitle(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label>Task Description:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={newTaskDescription}\r\n                                onChange={(e) => setNewTaskDescription(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label>Task Status:</label>\r\n                            <select\r\n                                value={newTaskStatus}\r\n                                onChange={(e) => setNewTaskStatus(e.target.value)}\r\n                                required\r\n                            >\r\n                                <option value=\"To Do\">To Do</option>\r\n                                <option value=\"In Progress\">In Progress</option>\r\n                                <option value=\"Done\">Done</option>\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <label>Assign To:</label>\r\n                            <select\r\n                                value={newTaskAssignedTo}\r\n                                onChange={(e) => setNewTaskAssignedTo(e.target.value)}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select a user</option>\r\n                                {users.map((user) => (\r\n                                    <option key={user.id} value={user.id}>\r\n                                        {user.name} ({user.email})\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <button type=\"submit\">Create Scrum</button>\r\n                    </form>\r\n                )}\r\n            </div>}\r\n            <ul>\r\n                {scrums.map((scrum) => (\r\n                    <li key={scrum.id}>\r\n                        {scrum.name}\r\n                        <button onClick={() => handleGetDetails(scrum.id)}>Get Details</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            {selectedScrum && <ScrumDetails scrum={selectedScrum} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const history = useHistory();\r\n    const { login } = useContext(UserContext);\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.get(`http://localhost:4000/users?email=${email}&password=${password}`);\r\n            if (response.data.length > 0) {\r\n                const user = response.data[0];\r\n                login(user);\r\n                if (user.role === 'admin') {\r\n                    history.push('/');\r\n                } else {\r\n                    history.push('/profiles');\r\n                }\r\n            } else {\r\n                alert('Invalid email or password');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error logging in:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <form onSubmit={handleLogin}>\r\n                <label>\r\n                    Email:\r\n                    <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n                </label>\r\n                <label>\r\n                    Password:\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n                </label>\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n            <button onClick={() => history.push('/signup')}>Sign Up</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\nconst UserProfile = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [showForm, setShowForm] = useState(false);\r\n    const [newUserName, setNewUserName] = useState('');\r\n    const [newUserEmail, setNewUserEmail] = useState('');\r\n    const [newUserPassword, setNewUserPassword] = useState('');\r\n    const [newUserRole, setNewUserRole] = useState('employee');\r\n    const { user } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:4000/users');\r\n                if (user?.role === 'admin') {\r\n                    setUsers(response.data.filter(user => user?.role !== 'admin'));\r\n                } else {\r\n                    setSelectedUser(user);\r\n                    fetchTasks(user?.id);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching users:', error);\r\n            }\r\n        };\r\n        fetchUsers();\r\n    }, [user]);\r\n\r\n    const fetchTasks = async (userId) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:4000/tasks?assignedTo=${userId}`);\r\n            setTasks(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching tasks:', error);\r\n        }\r\n    };\r\n\r\n    const handleGetHistory = (userId) => {\r\n        setSelectedUser(users.find(user => user?.id === userId));\r\n        fetchTasks(userId);\r\n    };\r\n\r\n    const handleAddUser = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            await axios.post('http://localhost:4000/users', {\r\n                name: newUserName,\r\n                email: newUserEmail,\r\n                password: newUserPassword,\r\n                role: newUserRole,\r\n            });\r\n\r\n            const updatedUsers = await axios.get('http://localhost:4000/users');\r\n            setUsers(updatedUsers.data.filter(user => user?.role !== 'admin'));\r\n            setShowForm(false); // Hide the form after submission\r\n            setNewUserName('');\r\n            setNewUserEmail('');\r\n            setNewUserPassword('');\r\n            setNewUserRole('employee');\r\n        } catch (error) {\r\n            console.error('Error adding user:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>User Profiles</h2>\r\n            {user?.role === 'admin' && (\r\n                <div>\r\n                    <button onClick={() => setShowForm(!showForm)}>\r\n                        {showForm ? 'Cancel' : 'Add New User'}\r\n                    </button>\r\n                    {showForm && (\r\n                        <form onSubmit={handleAddUser}>\r\n                            <div>\r\n                                <label>Name:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={newUserName}\r\n                                    onChange={(e) => setNewUserName(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>Email:</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    value={newUserEmail}\r\n                                    onChange={(e) => setNewUserEmail(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>Password:</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    value={newUserPassword}\r\n                                    onChange={(e) => setNewUserPassword(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>Role:</label>\r\n                                <select\r\n                                    value={newUserRole}\r\n                                    onChange={(e) => setNewUserRole(e.target.value)}\r\n                                    required\r\n                                >\r\n                                    <option value=\"employee\">Employee</option>\r\n                                    <option value=\"admin\">Admin</option>\r\n                                </select>\r\n                            </div>\r\n                            <button type=\"submit\">Create User</button>\r\n                        </form>\r\n                    )}\r\n                    <ul>\r\n                        {users.map(user => (\r\n                            <li key={user?.id}>\r\n                                <strong>Name:</strong> {user?.name} <br />\r\n                                <strong>Email:</strong> {user?.email} <br />\r\n                                <button onClick={() => handleGetHistory(user?.id)}>Get History</button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n\r\n            {user?.role !== 'admin' && (\r\n                <div>\r\n                    <h3>Tasks Worked By {user?.name}</h3>\r\n                    <ul>\r\n                        {tasks.map(task => (\r\n                            <li key={task.id}>\r\n                                <strong>Title:</strong> {task.title} <br />\r\n                                <strong>Description:</strong> {task.description} <br />\r\n                                <strong>Status:</strong> {task.status}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n\r\n            {selectedUser && user?.role === 'admin' && (\r\n                <div>\r\n                    <h3>Tasks Worked By {selectedUser.name}</h3>\r\n                    <ul>\r\n                        {tasks.map(task => (\r\n                            <li key={task.id}>\r\n                                <strong>Title:</strong> {task.title} <br />\r\n                                <strong>Description:</strong> {task.description} <br />\r\n                                <strong>Status:</strong> {task.status}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst SignUp = () => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const history = useHistory();\r\n\r\n    const handleSignUp = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('http://localhost:4000/users', {\r\n                name,\r\n                email,\r\n                password,\r\n                role: 'employee'\r\n            });\r\n            history.push('/login');\r\n        } catch (error) {\r\n            console.error('Error signing up:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Sign Up</h2>\r\n            <form onSubmit={handleSignUp}>\r\n                <label>\r\n                    Name:\r\n                    <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n                </label>\r\n                <label>\r\n                    Email:\r\n                    <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n                </label>\r\n                <label>\r\n                    Password:\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n                </label>\r\n                <button type=\"submit\">Sign Up</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useContext } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link, useHistory } from 'react-router-dom';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Login from './components/Login/Login';\nimport UserProfile from './components/UserProfile/UserProfile';\nimport SignUp from './components/Signup/SignUp';\nimport { UserProvider, UserContext } from '../src/context/UserContext';\n\nconst App = () => {\n  return (\n    <UserProvider>\n      <Router>\n        <div className=\"app\">\n          <Nav />\n          <Switch>\n            <Route path=\"/\" exact component={Dashboard} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/profiles\" component={UserProfile} />\n          </Switch>\n        </div>\n      </Router>\n    </UserProvider>\n  );\n};\n\nconst Nav = () => {\n  const { user, logout } = useContext(UserContext);\n  const history = useHistory();\n\n  const handleLogout = () => {\n    logout();\n    history.push('/login');\n  };\n\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Dashboard</Link>\n        </li>\n        {user ? (\n          <>\n            <li>\n              <Link to=\"/profiles\">Profiles</Link>\n            </li>\n            <li>\n              <button onClick={handleLogout}>Logout</button>\n            </li>\n          </>\n        ) : (\n          <>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n          </>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}